generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model alumnoXcursoXdivision {
  id               Int            @id @default(autoincrement())
  anoActual        Int?
  idCursoXdivision Int
  idUsuario        Int
  idEstadoAlumno   Int
  cursoXdivision   curso_division @relation("alumnoXcursoXdivisionTocursoXdivision", fields: [idCursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estadoAlumno     estadoAlumno   @relation(fields: [idEstadoAlumno], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario          usuario        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asistencia       asistencia[]
  nota             nota[]
  notificacion     notificacion[]
  sancion          sancion[]
}

model asistencia {
  id                      Int                   @id @default(autoincrement())
  creadoEn                String?
  actualizadoEn           String?
  idAlumnoXcursoXdivision Int
  idUsuario               Int
  presente                Boolean?
  ausente                 Boolean?
  ausenteJustificado      Boolean?
  llegadaTarde            Boolean?
  llegadaTardeJustificada Boolean?
  mediaFalta              Boolean?
  mediaFaltaJustificada   Boolean?
  motivo                  String?
  alumnoXcursoXdivision   alumnoXcursoXdivision @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model asistenciaDocente {
  id                      Int             @id @default(autoincrement())
  idDocenteXmateria       Int
  idUsuario               Int
  creadoEn                String?
  actualizadoEn           String?
  presente                Boolean?
  ausente                 Boolean?
  ausenteJustificado      Boolean?
  llegadaTarde            Boolean?
  llegadaTardeJustificada Boolean?
  mediaFalta              Boolean?
  mediaFaltaJustificada   Boolean?
  motivo                  String?
  docenteXmateria         docenteXmateria @relation(fields: [idDocenteXmateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario         @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model curso {
  id             Int              @id @default(autoincrement())
  nombre         String?
  curso_division curso_division[]
  materia        materia[]
}

model discapacidad {
  id                   Int                    @id @default(autoincrement())
  nombre               String?
  discapacidadXusuario discapacidadXusuario[]
}

model discapacidadXusuario {
  id             Int          @id @default(autoincrement())
  idDiscapacidad Int
  idUsuario      Int
  discapacidad   discapacidad @relation(fields: [idDiscapacidad], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario        usuario      @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model division {
  id             Int              @id @default(autoincrement())
  division       String?
  curso_division curso_division[]
}

model docenteXmateria {
  id                Int                 @id @default(autoincrement())
  idUsuario         Int
  idMateria         Int
  materia           materia             @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario           usuario             @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asistenciaDocente asistenciaDocente[]
}

model enfermedad {
  id                   Int                    @id @default(autoincrement())
  descripcion          String?
  enfermedadesXusuario enfermedadesXusuario[]
}

model enfermedadesXusuario {
  id           Int        @id @default(autoincrement())
  idEnfermedad Int
  idUsuario    Int
  enfermedad   enfermedad @relation(fields: [idEnfermedad], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario      usuario    @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estadoAlumno {
  id                    Int                     @id @default(autoincrement())
  estado                String?
  alumnoXcursoXdivision alumnoXcursoXdivision[]
}

model fechaExamen {
  id          Int       @id @default(autoincrement())
  titulo      String
  idUsuario   Int
  fechaInicio DateTime?
  fechaFin    DateTime?
  usuario     usuario   @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model fichaInstitucional {
  id                Int            @id @default(autoincrement())
  nombreInstitucion String?
  ubicacion         String?
  tipoInstitucion   String?
  descripcion       String?
  telefono1         String?
  telefono2         String?
  oficina1          String?
  oficina2          String?
  mail              String?
  idUsuario         Int
  usuario           usuario        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  portadasFicha     portadaFicha[]
}

model materia {
  id              Int               @id @default(autoincrement())
  nombre          String?
  idCorrelativa   Int
  idCurso         Int
  curso           curso             @relation(fields: [idCurso], references: [id])
  docenteXmateria docenteXmateria[]
  materialEstudio materialEstudio[]
  nota            nota[]
}

model materialEstudio {
  id               Int            @id @default(autoincrement())
  titulo           String?
  fecha            String?
  url              String?
  idCursoXDivision Int
  idMateria        Int
  idTrimestre      Int
  idUsuario        Int
  cursoXDivision   curso_division @relation("cursoXdivisionTomaterialEstudio", fields: [idCursoXDivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materia          materia        @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre        trimestre      @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario          usuario        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id          Int        @id @default(autoincrement())
  menuSistema String?
  url         String?
  menuXrol    menuXrol[]
}

model menuXrol {
  id     Int  @id @default(autoincrement())
  idRol  Int
  idMenu Int
  menu   menu @relation(fields: [idMenu], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol    rol  @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model nota {
  id                      Int                   @id @default(autoincrement())
  idAlumnoXcursoXdivision Int
  idMateria               Int
  nota1                   Int?
  nota2                   Int?
  nota3                   Int?
  nota4                   Int?
  nota5                   Int?
  idTrimestre             Int
  fecha                   String?
  idUsuario               Int
  alumnoXcursoXdivision   alumnoXcursoXdivision @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materia                 materia               @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre               trimestre             @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporteXtrimestre       reporteXtrimestre[]
}

model noticiasYnovedades {
  id            Int     @id @default(autoincrement())
  titulo        String?
  creadaEn      String?
  actualizadaEn String?
  descripcion   String?
  idUsuario     Int
  url           String?
  usuario       usuario @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model notificacion {
  id                      Int                    @id @default(autoincrement())
  asunto                  String?
  contenido               String?
  fecha                   String?
  idAlumnoXCursoXDivision Int
  alumnoXcursoXdivision   alumnoXcursoXdivision  @relation(fields: [idAlumnoXCursoXDivision], references: [id])
  notificacionXusuario    notificacionXusuario[]
}

model notificacionXusuario {
  id             Int          @id @default(autoincrement())
  idUsuario      Int
  idNotificacion Int
  notificacion   notificacion @relation(fields: [idNotificacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario        usuario      @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model permisos {
  id           Int            @id @default(autoincrement())
  casoDeUso    String?
  permisosXrol permisosXrol[]
}

model permisosXrol {
  id         Int      @id @default(autoincrement())
  idRol      Int
  idPermisos Int
  permisos   permisos @relation(fields: [idPermisos], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol        rol      @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model portadaFicha {
  id                   Int                @id @default(autoincrement())
  nombre               String
  url                  String
  idFichaInstitucional Int
  fichaInstitucional   fichaInstitucional @relation(fields: [idFichaInstitucional], references: [id])
}

model reporte {
  id                Int                 @id @default(autoincrement())
  idTipoReporte     Int
  fechaEmision      String?
  tipoReporte       tipoReporte         @relation(fields: [idTipoReporte], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporteXtrimestre reporteXtrimestre[]
}

model reporteXtrimestre {
  id               Int       @id @default(autoincrement())
  idReporte        Int
  idTrimestre      Int
  idAlumnoXmateria Int
  nota             nota      @relation(fields: [idAlumnoXmateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporte          reporte   @relation(fields: [idReporte], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre        trimestre @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rol {
  id           Int            @id @default(autoincrement())
  tipo         String?
  menuXrol     menuXrol[]
  permisosXrol permisosXrol[]
  usuario      usuario[]
}

model sancion {
  id                      Int                   @id @default(autoincrement())
  motivo                  String?
  fecha                   String?
  idTipoSancion           Int
  idCurso                 Int
  idAlumnoXCursoXDivision Int
  alumnoXCursoXDivision   alumnoXcursoXdivision @relation(fields: [idAlumnoXCursoXDivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipoSancion             tipoSancion           @relation(fields: [idTipoSancion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sancionXusuario         sancionXusuario[]
}

model sancionXusuario {
  id        Int     @id @default(autoincrement())
  idSancion Int
  idUsuario Int
  sancion   sancion @relation(fields: [idSancion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario   usuario @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tipoReporte {
  id      Int       @id @default(autoincrement())
  tipo    String?
  reporte reporte[]
}

model tipoSancion {
  id      Int       @id @default(autoincrement())
  tipo    String?
  sancion sancion[]
}

model trimestre {
  id                Int                 @id @default(autoincrement())
  trimestre         String?
  materialEstudio   materialEstudio[]
  nota              nota[]
  reporteXtrimestre reporteXtrimestre[]
}

model tutor {
  id        Int       @id @default(autoincrement())
  nombre    String?
  apellido  String?
  dni       String?
  correo    String?
  localidad String?
  telefono  String?
  direccion String?
  usuario   usuario[]
}

model usuario {
  id                    Int                     @id @default(autoincrement())
  login                 String?
  password              String?
  sexo                  String?
  nombre                String?
  apellido              String?
  legajo                String?
  fechaNacimiento       String?
  correo                String?
  localidad             String?
  telefono              String?
  direccion             String?
  alergias              String?
  idTutor               Int?
  idRol                 Int
  rol                   rol                     @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tutor                 tutor?                  @relation(fields: [idTutor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision alumnoXcursoXdivision[]
  asistencia            asistencia[]
  asistenciaDocente     asistenciaDocente[]
  discapacidadXusuario  discapacidadXusuario[]
  docenteXmateria       docenteXmateria[]
  enfermedadesXusuario  enfermedadesXusuario[]
  fechaExamen           fechaExamen[]
  fichaInstitucional    fichaInstitucional[]
  materialEstudio       materialEstudio[]
  nota                  nota[]
  noticiasYnovedades    noticiasYnovedades[]
  notificacionXusuario  notificacionXusuario[]
  sancionXusuario       sancionXusuario[]
}

model curso_division {
  id                    Int                     @id @default(autoincrement())
  id_curso              Int
  id_division           Int
  curso                 curso                   @relation(fields: [id_curso], references: [id], onDelete: NoAction, onUpdate: NoAction)
  division              division                @relation(fields: [id_division], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision alumnoXcursoXdivision[] @relation("alumnoXcursoXdivisionTocursoXdivision")
  materialEstudio       materialEstudio[]       @relation("cursoXdivisionTomaterialEstudio")
}
