generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model alumnoXcursoXdivision {
  id               Int             @id @default(autoincrement())
  anoActual        DateTime?       @db.DateTime(0)
  idCursoXdivision Int?
  idUsuario        Int?
  idEstadoAlumno   Int?
  usuario          usuario?        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "alumnoXcursoXdivision_ibfk_1")
  cursoXdivision   cursoXdivision? @relation(fields: [idCursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "alumnoXcursoXdivision_ibfk_2")
  estadoAlumno     estadoAlumno?   @relation(fields: [idEstadoAlumno], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "alumnoXcursoXdivision_ibfk_3")
  asistencia       asistencia[]
  nota             nota[]

  @@index([idCursoXdivision], map: "idCursoXdivision")
  @@index([idEstadoAlumno], map: "idEstadoAlumno")
  @@index([idUsuario], map: "idUsuario")
}

model archivo {
  id              Int               @id @default(autoincrement())
  titulo          String?           @db.Text
  descripcion     String?           @db.Text
  url             String?           @db.Text
  idTipoArchivo   Int?
  tipoArchivo     tipoArchivo?      @relation(fields: [idTipoArchivo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "archivo_ibfk_1")
  materialEstudio materialEstudio[]

  @@index([idTipoArchivo], map: "idTipoArchivo")
}

model asistencia {
  id                      Int                    @id @default(autoincrement())
  fecha                   DateTime?              @db.DateTime(0)
  justificado             Boolean?
  idAlumnoXcursoXdivision Int?
  idUsuario               Int?
  presente                Boolean?
  ausente                 Boolean?
  ausenteJustificado      Boolean?
  llegadaTarde            Boolean?
  llegadaTardeJustificada Boolean?
  mediaFalta              Boolean?
  mediaFaltaJustificada   Boolean?
  alumnoXcursoXdivision   alumnoXcursoXdivision? @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asistencia_ibfk_1")
  usuario                 usuario?               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asistencia_ibfk_2")

  @@index([idAlumnoXcursoXdivision], map: "idAlumnoXcursoXdivision")
  @@index([idUsuario], map: "idUsuario")
}

model asistenciaDocente {
  id                Int              @id
  idDocenteXmateria Int?
  justificado       Boolean?
  idUsuario         Int?
  fecha             DateTime?        @db.DateTime(0)
  usuario           usuario?         @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asistenciaDocente_ibfk_1")
  docenteXmateria   docenteXmateria? @relation(fields: [idDocenteXmateria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asistenciaDocente_ibfk_2")

  @@index([idDocenteXmateria], map: "idDocenteXmateria")
  @@index([idUsuario], map: "idUsuario")
}

model curso {
  id             Int              @id @default(autoincrement())
  nombre         String?          @db.Text
  cursoXdivision cursoXdivision[]
  materia        materia[]
  notificacion   notificacion[]
  sancion        sancion[]
}

model cursoXdivision {
  id                    Int                     @id @default(autoincrement())
  idCurso               Int?
  IdDivision            Int?
  curso                 curso?                  @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cursoXdivision_ibfk_1")
  division              division?               @relation(fields: [IdDivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cursoXdivision_ibfk_2")
  alumnoXcursoXdivision alumnoXcursoXdivision[]

  @@index([IdDivision], map: "IdDivision")
  @@index([idCurso], map: "idCurso")
}

model discapacidad {
  id                   Int                    @id @default(autoincrement())
  nombre               String                 @db.Text
  discapacidadXusuario discapacidadXusuario[]
}

model discapacidadXusuario {
  id             Int           @id @default(autoincrement())
  idDiscapacidad Int?
  idUsuario      Int?
  usuario        usuario?      @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "discapacidadXusuario_ibfk_1")
  discapacidad   discapacidad? @relation(fields: [idDiscapacidad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "discapacidadXusuario_ibfk_2")

  @@index([idDiscapacidad], map: "idDiscapacidad")
  @@index([idUsuario], map: "idUsuario")
}

model division {
  id             Int              @id @default(autoincrement())
  division       String?          @db.Text
  cursoXdivision cursoXdivision[]
}

model docenteXmateria {
  id                Int                 @id @default(autoincrement())
  idUsuario         Int?
  idMateria         Int?
  usuario           usuario?            @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "docenteXmateria_ibfk_1")
  materia           materia?            @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "docenteXmateria_ibfk_2")
  asistenciaDocente asistenciaDocente[]

  @@index([idMateria], map: "idMateria")
  @@index([idUsuario], map: "idUsuario")
}

model enfermedad {
  id                   Int                    @id @default(autoincrement())
  descripcion          String?                @db.Text
  enfermedadesXusuario enfermedadesXusuario[]
}

model enfermedadesXusuario {
  id           Int         @id @default(autoincrement())
  idEnfermedad Int?
  idUsuario    Int?
  enfermedad   enfermedad? @relation(fields: [idEnfermedad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enfermedadesXusuario_ibfk_1")
  usuario      usuario?    @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enfermedadesXusuario_ibfk_2")

  @@index([idEnfermedad], map: "idEnfermedad")
  @@index([idUsuario], map: "idUsuario")
}

model estadoAlumno {
  id                    Int                     @id @default(autoincrement())
  estado                String?                 @db.Text
  alumnoXcursoXdivision alumnoXcursoXdivision[]
}

model fechaExamen {
  id        Int       @id @default(autoincrement())
  idUsuario Int?
  idCurso   Int?
  fecha     DateTime? @db.DateTime(0)
  idMateria Int?
  materia   materia?  @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fechaExamen_ibfk_1")

  @@index([idMateria], map: "idMateria")
}

model fichaInstitucional {
  id                Int            @id @default(autoincrement())
  nombreInstitucion String?        @db.Text
  ubicacion         String?        @db.Text
  tipoInstitucion   Boolean?
  descripcion       String?        @db.Text
  telefono1         String?        @db.Text
  telefono2         String?        @db.Text
  oficina1          String?        @db.Text
  oficina2          String?        @db.Text
  mail              String?        @db.Text
  idUsuario         Int?
  usuario           usuario?       @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fichaInstitucional_ibfk_1")
  portadaFicha      portadaFicha[]

  @@index([idUsuario], map: "idUsuario")
}

model materia {
  id              Int               @id @default(autoincrement())
  nombre          String?           @db.Text
  idCurso         Int?
  idCorrelativa   Int?
  curso           curso?            @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "materia_ibfk_1")
  materia         materia?          @relation("materiaTomateria", fields: [idCorrelativa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "materia_ibfk_2")
  docenteXmateria docenteXmateria[]
  fechaExamen     fechaExamen[]
  other_materia   materia[]         @relation("materiaTomateria")
  nota            nota[]

  @@index([idCorrelativa], map: "idCorrelativa")
  @@index([idCurso], map: "idCurso")
}

model materialEstudio {
  id          Int       @id @default(autoincrement())
  titulo      String?   @db.Text
  fecha       DateTime? @db.DateTime(0)
  descripcion String?   @db.Text
  idArchivo   Int?
  idUsuario   Int?
  archivo     archivo?  @relation(fields: [idArchivo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "materialEstudio_ibfk_1")
  usuario     usuario?  @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "materialEstudio_ibfk_2")

  @@index([idArchivo], map: "idArchivo")
  @@index([idUsuario], map: "idUsuario")
}

model menu {
  id          Int        @id @default(autoincrement())
  menuSistema String?    @db.Text
  url         String?    @db.Text
  menuXrol    menuXrol[]
}

model menuXrol {
  id     Int   @id @default(autoincrement())
  idRol  Int?
  idMenu Int?
  menu   menu? @relation(fields: [idMenu], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol    rol?  @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([idMenu], map: "menuXrol_idMenu_fkey")
  @@index([idRol], map: "menuXrol_idRol_fkey")
}

model nota {
  id                      Int                    @id @default(autoincrement())
  idAlumnoXcursoXdivision Int?
  idMateria               Int?
  fecha                   DateTime?              @db.DateTime(0)
  idTrimestre             Int?
  idUsuario               Int?
  nota1                   Int?
  nota2                   Int?
  nota3                   Int?
  nota4                   Int?
  nota5                   Int?
  alumnoXcursoXdivision   alumnoXcursoXdivision? @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materia                 materia?               @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre               trimestre?             @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario?               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporteXtrimestre       reporteXtrimestre[]

  @@index([idAlumnoXcursoXdivision], map: "nota_idAlumnoXcursoXdivision_fkey")
  @@index([idMateria], map: "nota_idMateria_fkey")
  @@index([idTrimestre], map: "nota_idTrimestre_fkey")
  @@index([idUsuario], map: "nota_idUsuario_fkey")
}

model noticiasYnovedades {
  id            Int       @id @default(autoincrement())
  titulo        String?   @db.Text
  creadaEn      DateTime? @db.DateTime(0)
  actualizadaEn DateTime? @db.DateTime(0)
  descripcion   String?   @db.Text
  idUsuario     Int?
  url           String?   @db.Text
  usuario       usuario?  @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([idUsuario], map: "noticiasYnovedades_idUsuario_fkey")
}

model notificacion {
  id          Int      @id @default(autoincrement())
  descripcion String?  @db.Text
  idUsuario   Int?
  idCurso     Int?
  curso       curso?   @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notificacion_ibfk_1")
  usuario     usuario? @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notificacion_ibfk_2")

  @@index([idCurso], map: "idCurso")
  @@index([idUsuario], map: "idUsuario")
}

model permisos {
  id           Int            @id @default(autoincrement())
  casoDeUso    String?        @db.Text
  permisosXrol permisosXrol[]
}

model permisosXrol {
  id         Int       @id @default(autoincrement())
  idRol      Int?
  idPermisos Int?
  rol        rol?      @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "permisosXrol_ibfk_1")
  permisos   permisos? @relation(fields: [idPermisos], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "permisosXrol_ibfk_2")

  @@index([idPermisos], map: "idPermisos")
  @@index([idRol], map: "idRol")
}

model portadaFicha {
  id                   Int                 @id @default(autoincrement())
  nombre               String              @db.Text
  url                  String              @db.Text
  fichaInstitucionalId Int?
  fichaInstitucional   fichaInstitucional? @relation(fields: [fichaInstitucionalId], references: [id])

  @@index([fichaInstitucionalId], map: "portadaFicha_fichaInstitucionalId_fkey")
}

model reporte {
  id                Int                 @id @default(autoincrement())
  idTipoReporte     Int?
  fechaEmision      DateTime?           @db.DateTime(0)
  tipoReporte       tipoReporte?        @relation(fields: [idTipoReporte], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reporte_ibfk_1")
  reporteXtrimestre reporteXtrimestre[]

  @@index([idTipoReporte], map: "idTipoReporte")
}

model reporteXtrimestre {
  id          Int        @id @default(autoincrement())
  idReporte   Int?
  idTrimestre Int?
  idNota      Int?
  trimestre   trimestre? @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reporteXtrimestre_ibfk_1")
  nota        nota?      @relation(fields: [idNota], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reporteXtrimestre_ibfk_2")
  reporte     reporte?   @relation(fields: [idReporte], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reporteXtrimestre_ibfk_3")

  @@index([idNota], map: "idNota")
  @@index([idReporte], map: "idReporte")
  @@index([idTrimestre], map: "idTrimestre")
}

model rol {
  id           Int            @id @default(autoincrement())
  tipo         String?        @db.Text
  menuXrol     menuXrol[]
  permisosXrol permisosXrol[]
  usuario      usuario[]
}

model sancion {
  id              Int               @id @default(autoincrement())
  motivo          String?           @db.Text
  fecha           DateTime?         @db.DateTime(0)
  idTipoSancion   Int?
  idCurso         Int?
  curso           curso?            @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sancion_ibfk_1")
  tipoSancion     tipoSancion?      @relation(fields: [idTipoSancion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sancion_ibfk_2")
  sancionXusuario sancionXusuario[]

  @@index([idCurso], map: "idCurso")
  @@index([idTipoSancion], map: "idTipoSancion")
}

model sancionXusuario {
  id        Int      @id
  idSancion Int?
  idUsuario Int?
  sancion   sancion? @relation(fields: [idSancion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sancionXusuario_ibfk_1")
  usuario   usuario? @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sancionXusuario_ibfk_2")

  @@index([idSancion], map: "idSancion")
  @@index([idUsuario], map: "idUsuario")
}

model tipoArchivo {
  id      Int       @id @default(autoincrement())
  tipo    String?   @db.Text
  archivo archivo[]
}

model tipoReporte {
  id      Int       @id @default(autoincrement())
  tipo    String?   @db.Text
  reporte reporte[]
}

model tipoSancion {
  id      Int       @id @default(autoincrement())
  tipo    String?   @db.Text
  sancion sancion[]
}

model trimestre {
  id                Int                 @id @default(autoincrement())
  trimestre         String?             @db.Text
  nota              nota[]
  reporteXtrimestre reporteXtrimestre[]
}

model usuario {
  id                    Int                     @id @default(autoincrement())
  login                 String?                 @db.Text
  password              String?                 @db.Text
  sexo                  String?                 @db.Text
  nombre                String?                 @db.Text
  apellido              String?                 @db.Text
  dni                   String?                 @db.Text
  correo                String?                 @db.Text
  localidad             String?                 @db.Text
  telefono              String?                 @db.Text
  direccion             String?                 @db.Text
  alergias              String?                 @db.Text
  idTutor               Int?
  idRol                 Int?
  rol                   rol?                    @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario               usuario?                @relation("usuarioTousuario", fields: [idTutor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision alumnoXcursoXdivision[]
  asistencia            asistencia[]
  asistenciaDocente     asistenciaDocente[]
  discapacidadXusuario  discapacidadXusuario[]
  docenteXmateria       docenteXmateria[]
  enfermedadesXusuario  enfermedadesXusuario[]
  fichaInstitucional    fichaInstitucional[]
  materialEstudio       materialEstudio[]
  nota                  nota[]
  noticiasYnovedades    noticiasYnovedades[]
  notificacion          notificacion[]
  sancionXusuario       sancionXusuario[]
  other_usuario         usuario[]               @relation("usuarioTousuario")

  @@index([idRol], map: "usuario_idRol_fkey")
  @@index([idTutor], map: "usuario_idTutor_fkey")
}
