generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model alumnoXcursoXdivision {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  anoActual        DateTime?
  idCursoXdivision String?         @db.ObjectId
  idUsuario        String?         @db.ObjectId
  idEstadoAlumno   String?         @db.ObjectId
  estadoAlumno     estadoAlumno?   @relation(fields: [idEstadoAlumno], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario          usuario?        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cursoXdivision   cursoXdivision? @relation(fields: [idCursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asistencia       asistencia[]
  nota             nota[]
}

model archivo {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  titulo          String?
  descripcion     String?
  url             String?
  idTipoArchivo   String?           @db.ObjectId
  tipoArchivo     tipoArchivo?      @relation(fields: [idTipoArchivo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materialEstudio materialEstudio[]
}

model asistencia {
  id                      String                 @id @default(auto()) @map("_id") @db.ObjectId
  creadoEn                DateTime?
  actualizadoEn           DateTime?
  idAlumnoXcursoXdivision String?                @db.ObjectId
  idUsuario               String?                @db.ObjectId
  presente                Boolean?
  ausente                 Boolean?
  ausenteJustificado      Boolean?
  llegadaTarde            Boolean?
  llegadaTardeJustificada Boolean?
  mediaFalta              Boolean?
  mediaFaltaJustificada   Boolean?
  motivo                  String?
  alumnoXcursoXdivision   alumnoXcursoXdivision? @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario?               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model asistenciaDocente {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  idDocenteXmateria String?          @db.ObjectId
  idTipoAsistencia  String?          @db.ObjectId
  justificado       Boolean?
  idUsuario         String?          @db.ObjectId
  fecha             DateTime?
  docenteXmateria   docenteXmateria? @relation(fields: [idDocenteXmateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario           usuario?         @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model curso {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  nombre         String?
  cursoXdivision cursoXdivision[]
  materia        materia[]
  notificacion   notificacion[]
  sancion        sancion[]
}

model cursoXdivision {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  idCurso               String?                 @db.ObjectId
  idDivision            String?                 @db.ObjectId
  division              division?               @relation(fields: [idDivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  curso                 curso?                  @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision alumnoXcursoXdivision[]
  notificacion          notificacion[]
}

model discapacidad {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  nombre               String
  discapacidadXusuario discapacidadXusuario[]
}

model discapacidadXusuario {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  idDiscapacidad String?       @db.ObjectId
  idUsuario      String?       @db.ObjectId
  discapacidad   discapacidad? @relation(fields: [idDiscapacidad], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario        usuario?      @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model division {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  division       String?
  cursoXdivision cursoXdivision[]
}

model docenteXmateria {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  idUsuario         String?             @db.ObjectId
  idMateria         String?             @db.ObjectId
  materia           materia?            @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario           usuario?            @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asistenciaDocente asistenciaDocente[]
}

model enfermedad {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  descripcion          String?
  usuarioId            String?                @db.ObjectId
  usuario              usuario?               @relation(fields: [usuarioId], references: [id])
  enfermedadesXusuario enfermedadesXusuario[]
}

model enfermedadesXusuario {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  idEnfermedad String?     @db.ObjectId
  idUsuario    String?     @db.ObjectId
  usuario      usuario?    @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  enfermedad   enfermedad? @relation(fields: [idEnfermedad], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estadoAlumno {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  estado                String?
  alumnoXcursoXdivision alumnoXcursoXdivision[]
}

model fechaExamen {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  idUsuario String?   @db.ObjectId
  idCurso   String?   @db.ObjectId
  fecha     DateTime?
  idMateria String?   @db.ObjectId
  materia   materia?  @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model fichaInstitucional {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  nombreInstitucion String?
  ubicacion         String?
  tipoInstitucion   String?
  descripcion       String?
  telefono1         String?
  telefono2         String?
  oficina1          String?
  oficina2          String?
  mail              String?
  idUsuario         String?        @db.ObjectId
  usuario           usuario?       @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  portadasFicha     portadaFicha[]
}

model materia {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  nombre          String?
  idCorrelativa   String?           @db.ObjectId
  materia         materia?          @relation("materiaTomateria", fields: [idCorrelativa], references: [id], onDelete: NoAction, onUpdate: NoAction)
  docenteXmateria docenteXmateria[]
  fechaExamen     fechaExamen[]
  other_materia   materia[]         @relation("materiaTomateria")
  nota            nota[]
  curso           curso?            @relation(fields: [idCurso], references: [id])
  idCurso         String?           @db.ObjectId
}

model materialEstudio {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  titulo      String?
  fecha       DateTime?
  descripcion String?
  idArchivo   String?   @db.ObjectId
  idUsuario   String?   @db.ObjectId
  usuario     usuario?  @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  archivo     archivo?  @relation(fields: [idArchivo], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  menuSistema String?
  url         String?
  menuXrol    menuXrol[]
}

model menuXrol {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  idRol  String? @db.ObjectId
  idMenu String? @db.ObjectId
  menu   menu?   @relation(fields: [idMenu], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol    rol?    @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model nota {
  id                      String                 @id @default(auto()) @map("_id") @db.ObjectId
  idAlumnoXcursoXdivision String?                @db.ObjectId
  idMateria               String?                @db.ObjectId
  nota1                   Int?
  nota2                   Int?
  nota3                   Int?
  nota4                   Int?
  nota5                   Int?
  idTrimestre             String?                @db.ObjectId
  fecha                   DateTime?
  idUsuario               String?                @db.ObjectId
  usuario                 usuario?               @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre               trimestre?             @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materia                 materia?               @relation(fields: [idMateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision   alumnoXcursoXdivision? @relation(fields: [idAlumnoXcursoXdivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporteXtrimestre       reporteXtrimestre[]
}

model noticiasYnovedades {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  titulo        String?
  creadaEn      DateTime?
  actualizadaEn DateTime?
  descripcion   String?
  idUsuario     String?   @db.ObjectId
  url           String?
  usuario       usuario?  @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model notificacion {
  asunto          String?
  contenido       String?         @db.ObjectId
  idUsuario       String?
  idCursoDivision String?         @db.ObjectId
  cursoXdivision  cursoXdivision? @relation(fields: [idCursoDivision], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario         usuario?        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  descripcion     String?
  idCurso         String?         @db.ObjectId
  curso           curso?          @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model permisos {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  casoDeUso    String?
  permisosXrol permisosXrol[]
}

model permisosXrol {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  idRol      String?   @db.ObjectId
  idPermisos String?   @db.ObjectId
  permisos   permisos? @relation(fields: [idPermisos], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol        rol?      @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model portadaFicha {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  nombre               String
  url                  String
  idFichaInstitucional String?             @db.ObjectId
  fichaInstitucional   fichaInstitucional? @relation(fields: [idFichaInstitucional], references: [id])
}

model reporte {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  idTipoReporte     String?             @db.ObjectId
  fechaEmision      DateTime?
  tipoReporte       tipoReporte?        @relation(fields: [idTipoReporte], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporteXtrimestre reporteXtrimestre[]
}

model reporteXtrimestre {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  idReporte        String?    @db.ObjectId
  idTrimestre      String?    @db.ObjectId
  idAlumnoXmateria String?    @db.ObjectId
  reporte          reporte?   @relation(fields: [idReporte], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trimestre        trimestre? @relation(fields: [idTrimestre], references: [id], onDelete: NoAction, onUpdate: NoAction)
  nota             nota?      @relation(fields: [idAlumnoXmateria], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rol {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  tipo         String?
  menuXrol     menuXrol[]
  permisosXrol permisosXrol[]
  usuario      usuario[]
}

model sancion {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  motivo          String?
  fecha           DateTime?
  idTipoSancion   String?           @db.ObjectId
  idCurso         String?           @db.ObjectId
  tipoSancion     tipoSancion?      @relation(fields: [idTipoSancion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  curso           curso?            @relation(fields: [idCurso], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sancionXusuario sancionXusuario[]
}

model sancionXusuario {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  idSancion String?  @db.ObjectId
  idUsuario String?  @db.ObjectId
  usuario   usuario? @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sancion   sancion? @relation(fields: [idSancion], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tipoArchivo {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  tipo    String?
  archivo archivo[]
}

model tipoReporte {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  tipo    String?
  reporte reporte[]
}

model tipoSancion {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  tipo    String?
  sancion sancion[]
}

model trimestre {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  trimestre         String?
  nota              nota[]
  reporteXtrimestre reporteXtrimestre[]
}

model tutor {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  nombre    String?
  apellido  String?
  dni       String?
  correo    String?
  localidad String?
  telefono  String?
  direccion String?
  usuario   usuario[]
}

model usuario {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  login                 String?
  password              String?
  sexo                  String?
  nombre                String?
  apellido              String?
  legajo                String?
  correo                String?
  localidad             String?
  telefono              String?
  direccion             String?
  alergias              String?
  idTutor               String?                 @db.ObjectId
  idRol                 String?                 @db.ObjectId
  rol                   rol?                    @relation(fields: [idRol], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tutor                 tutor?                  @relation(fields: [idTutor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  alumnoXcursoXdivision alumnoXcursoXdivision[]
  asistencia            asistencia[]
  asistenciaDocente     asistenciaDocente[]
  discapacidadXusuario  discapacidadXusuario[]
  docenteXmateria       docenteXmateria[]
  enfermedad            enfermedad[]
  enfermedadesXusuario  enfermedadesXusuario[]
  fichaInstitucional    fichaInstitucional[]
  materialEstudio       materialEstudio[]
  nota                  nota[]
  noticiasYnovedades    noticiasYnovedades[]
  notificacion          notificacion[]
  sancionXusuario       sancionXusuario[]
}
